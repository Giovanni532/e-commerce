generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Utilisateur {
  id            String     @id @default(cuid())
  idFirebase    String     @unique
  nom           String?
  prenom        String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  role          Role       @default(USER)
  commandes     Commande[]
  avis          Avis[]

  @@map("utilisateurs")
}

model Categorie {
  id           Int       @id @default(autoincrement())
  nomCategorie String
  produits     Produit[]

  @@map("categories")
}

model Produit {
  id               Int               @id @default(autoincrement())
  nomProduit       String
  description      String
  prix             Float
  quantiteEnStock  Int
  idCategorie      Int
  categorie        Categorie         @relation(fields: [idCategorie], references: [id], onDelete: Cascade)
  images           Image[]           @relation("ProduitImages")
  avis             Avis[]
  commandeProduits CommandeProduit[]

  @@map("produits")
}

model Paiement {
  id              Int      @id @default(autoincrement())
  idCommande      Int
  commande        Commande @relation(fields: [idCommande], references: [id])
  datePaiement    DateTime @default(now())
  montant         Float
  methodePaiement String

  @@map("paiements")
}

model Commande {
  id               Int               @id @default(autoincrement())
  dateCommande     DateTime          @default(now())
  idUtilisateur    String
  utilisateur      Utilisateur       @relation(fields: [idUtilisateur], references: [id])
  statutCommande   String
  paiements        Paiement[]
  commandeProduits CommandeProduit[]
  prixTotal        Float

  @@map("commandes")
}

model CommandeProduit {
  id           Int      @id @default(autoincrement())
  idCommande   Int
  idProduit    Int
  quantite     Int
  prixUnitaire Float
  commande     Commande @relation(fields: [idCommande], references: [id], onDelete: Cascade)
  produit      Produit  @relation(fields: [idProduit], references: [id], onDelete: Cascade)

  @@unique([idCommande, idProduit])
  @@map("commande_produits")
}

model Avis {
  id            Int         @id @default(autoincrement())
  idProduit     Int
  produit       Produit     @relation(fields: [idProduit], references: [id], onDelete: Cascade)
  idUtilisateur String
  utilisateur   Utilisateur @relation(fields: [idUtilisateur], references: [id], onDelete: Cascade)
  note          Int
  commentaire   String
  dateAvis      DateTime    @default(now())

  @@map("avis")
}

model Image {
  id        Int      @id @default(autoincrement())
  urlImage  String
  produitId Int?
  produit   Produit? @relation("ProduitImages", fields: [produitId], references: [id], onDelete: Cascade)

  @@map("images")
}

enum Role {
  USER
  ADMIN
}
